- name: Install & Configure JBoss EAP
  hosts: tag_Role_eap:&tag_Name_{{scope}}
  gather_facts: yes
  become: yes

  vars:
    rhn_username: "{{ rhsm_username }}"
    rhn_password: "{{ rhsm_password }}"
    rh_poolid: "{{ rhpoolid }}"
  
  tasks:

    - name: Find MS-SQL IP Address 
      set_fact:
        sqlip: "{{ item }}"
      with_inventory_hostnames:
        - tag_Role_database:&tag_Name_{{scope}}

    - name: Display MS-SQL IP Address
      debug:
        var: sqlip
        verbosity: 2

    - name: Find EAP VMs IP addresses
      set_fact:
        ips: "{{ item }}"
      with_inventory_hostnames:
        - tag_Role_eap:&tag_Name_{{scope}}

    - name: Display EAP IP Address
      debug:
        var: ips
        verbosity: 2
        
    # - name: Return all secrets from a path
    #   set_fact:
    #     db_secrets: "{{ lookup('hashi_vault', 'secret=' + hc_lookup)}}"
    #   vars: 
    #     hc_lookup: "/database/creds/readwrite token={{ hc_vault_token }} url={{ hc_vault_server }}"

    # - name: Find MS-SQL password
    #   set_fact:
    #     sqlpass: "{{ db_secrets.password }}"

    # - name: Find MS-SQL user
    #   set_fact:
    #     sqluser: "{{ db_secrets.username }}"

    - name: Find MS-SQL password
      set_fact:
        sqlpass:  "{{ hostvars.fact_store.eap_facts.db_password }}"

    - name: Find MS-SQL user
      set_fact:
        sqluser: "{{ hostvars.fact_store.eap_facts.db_user }}"

    - name: Install needed utilities packages
      yum:
        name: "{{ item }}"
        state: present
      loop:
        - firewalld
        - unzip

    - name: Get JBOSS source
      get_url:
        url : "{{ s3_eap }}"
        dest: /tmp/
    - name: Get JDBC driver 
      get_url:
        url :  "{{ s3_jdbc }}"
        dest: /tmp/         

    - name: Include JBOSS common tasks
      include_tasks: common.yml

    - name: Include EAP tasks 
      include_tasks: eap.yml

    - name: Configure firewalld 
      service:
        name: firewalld
        state: stopped
        enabled: yes

    - name: Stop JBOSS
      service: 
        name: jboss-standalone
        state: stopped

    - name: Create jdbc folder
      file:
        path: /opt/jboss-as/jboss-eap-7.1/modules/com/microsoft/main/
        state: directory
        mode: 0775
        recurse: yes
        owner: jboss-as
        group: jboss_as

    - name: Create download temp folder
      file:
        path: /tmp/sqldriver
        state: directory
        mode: 0660

    - name: Get MS SQL jdbc driver
      unarchive:
        src: /tmp/sqljdbc_7.0.0.0_enu.tar.gz
        dest: /tmp/sqldriver
        remote_src: yes

    - name: Copy Driver to modules
      copy:
        src: /tmp/sqldriver/sqljdbc_7.0/enu/mssql-jdbc-7.0.0.jre8.jar
        dest: /opt/jboss-as/jboss-eap-7.1/modules/com/microsoft/main/mssql-jdbc-7.0.0.jre8.jar
        remote_src: yes
        owner: jboss-as
        group: jboss_as
        mode: 0664

    - name: Clean up download
      file: 
        name: /tmp/sqldriver
        state: absent 

    - name: Create the module.xml file
      copy:
        src: files/module.xml
        dest: /opt/jboss-as/jboss-eap-7.1/modules/com/microsoft/main/module.xml
        owner: jboss-as
        group: jboss_as
        mode: 0664

    - name: Customize the EAP standalone file 
      template:
        src: "templates/{{ jboss_eap_default_config }}.j2"
        dest: "/opt/jboss-as/jboss-eap-7.1/standalone/configuration/{{ jboss_eap_default_config }}"
        owner: jboss-as
        group: jboss_as
        mode: 0664

    - name: Start JBOSS
      service:
        name: jboss-standalone
        state: started

    - name: Get WAR
      get_url:
        url: "{{ artifact }}"
        dest: /tmp/coolstore.war
        force: yes
        #url_password: "{{ jfrog_pass }}"
        #url_username: "{{ jfrog_user }}"

    - name: Install WAR
      jboss:
        deploy_path: "{{ deploy_path }}"
        src: /tmp/coolstore.war
        deployment: ROOT.war
        state: present
      ignore_errors: yes









